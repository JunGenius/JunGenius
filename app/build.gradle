apply plugin: 'com.dd.comgradle'
apply from: 'thinker.gradle'

android {
    compileSdkVersion build_versions.compile_sdk

    defaultConfig {
        applicationId "com.qj.frame"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode app_versions.version_code
        versionName app_versions.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Arouter
        javaCompileOptions {
            annotationProcessorOptions {

                arguments = [moduleName: project.getName()]

                includeCompileClasspath = true
            }
        }



        multiDexEnabled true

        //tinker
        /**
         * buildConfig can change during patch!
         * we can use the newly value when patch
         */
        buildConfigField "String", "MESSAGE", "\"I am the base apk\""
//        buildConfigField "String", "MESSAGE", "\"I am the patch apk\""
        /**
         * client version would update with patch
         * so we can get the newly git version easily!
         */
        buildConfigField "String", "TINKER_ID", "\"${TINKER_VERSION}\""

        buildConfigField "String", "PLATFORM", "\"all\""
    }

    //tinker
    dexOptions {
        jumboMode = true
    }

    signingConfigs {
        release {
            try {
                storeFile file('./keystore/genius.jks')//密钥文件路径
                storePassword "woshiqujun0108"//密钥文件密码
                keyAlias "qj"//key别名
                keyPassword "woshiqujun0108"//key密码
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug {
            storeFile file("./keystore/debug.keystore")
        }
    }
    dataBinding{
        enabled = true
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }

    }

    def listSubFile = {
        def resFolder = 'src/main/res/layout'
        def files = file(resFolder).listFiles()
        def folders = []
        files.each {
            item -> folders.add(item.absolutePath)
        }
        folders.add(file(resFolder).parentFile.absolutePath)
        return folders
    }

    sourceSets {
        main {
            res.srcDirs = listSubFile()
        }
    }


}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    //noinspection GradleCompatible
//    compile "com.android.support:appcompat-v7:${versions.supportLib}"
//    compile "com.android.support:design:${versions.supportLib}"
//    compile "com.android.support:cardview-v7:${versions.supportLib}"
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    compile('com.mikepenz:materialdrawer:5.9.5@aar') {
//        transitive = true
//    }
//    compile 'com.mikepenz:google-material-typeface:2.2.0.1@aar'
//    compile 'com.mikepenz:fontawesome-typeface:4.6.0.3@aar'
//    compile 'com.mikepenz:octicons-typeface:3.0.0.1@aar'
//    implementation 'com.jakewharton:butterknife:8.2.1'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:8.2.1'
//    // loading dialog
//    implementation 'com.wang.avi:library:2.1.3'
//    //提示框 Toast
//    implementation 'com.github.GrenderG:Toasty:1.3.0'
//    // 颜色
//    implementation 'com.zzhoujay.materialcolors:materialcolors:1.0.0'
//    // logger
//    implementation 'com.qj.logger:QYLogger:1.1.0'
//    // 异常捕获
//    implementation 'ch.acra:acra:4.9.0'
//    configurations.all {
//        resolutionStrategy.force 'com.android.support:support-annotations:25.3.0'
//    }
//    // ViewModel和LiveData依赖
//    implementation 'android.arch.lifecycle:extensions:1.1.1'
//    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
//    //paging
//    implementation 'android.arch.paging:runtime:1.0.1'
//
//    // 依赖注入
//    implementation 'com.google.dagger:dagger:2.7'
//    annotationProcessor 'com.google.dagger:dagger-compiler:2.7'
//
//    //tinker的核心库 热修复
//    implementation("com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}") { changing = true }
//    annotationProcessor("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}") {
//        changing = true
//    }
//    compileOnly("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
//    implementation 'com.android.support:multidex:1.0.3'
//
//    // EventBus
//    implementation 'org.greenrobot:eventbus:3.0.0'
//    /**
//     *  数据库 GreenDao
//     */
//    implementation 'org.greenrobot:greendao:3.0.1'
//    implementation 'org.greenrobot:greendao-generator:3.0.0'
//    // 适配
//    implementation 'com.bulong.rudeness:rudeness:latest.release@aar'
////    implementation files('libs/tbs_sdk_thirdapp_v3.6.0.1310_43612_sharewithdownload_withoutGame_obfs_20180706_163319.jar')
//
//    // Retrofit + RxJava2
//    implementation 'com.qj.client:JYRetrofitClient:1.0.2'
//

    compile fileTree(dir: 'libs', include: ['*.jar'])

    // 只能用 compile 依赖
    compile project(':lib_common')

    annotationProcessor deps.arouter.compiler

    annotationProcessor deps.dagger.compiler

    annotationProcessor deps.thinker.android_anno

    annotationProcessor deps.butterknife.compiler

}


combuild {
    applicationName = 'com.qj.frame.app.AppApplication'
    isRegisterCompoAuto = true
}

//greendao {
//    schemaVersion deps.greenrobot.version
//    daoPackage 'com.qj.frame.datebase.dao'
//    targetGenDir 'src/main/java'
//}

